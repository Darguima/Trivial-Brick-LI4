@page "/notifications"
@rendermode InteractiveServer

<PageTitle>Notifications</PageTitle>

<p>Manage your notifications here.</p>

<div class="form-group">
    <label for="notificationId">Notification ID</label>
    <input type="number" class="form-control" id="notificationId" @bind="notificationId" placeholder="Enter Notification ID" />
</div>

<button class="btn btn-secondary" @onclick="GetNotification">Get Notification</button>
<button class="btn btn-info" @onclick="GetAllNotifications">Get All Notifications</button>

<hr />

<h3>Create New Notification</h3>

<div class="form-group">
    <label for="message">Message</label>
    <textarea class="form-control" id="message" @bind="message" placeholder="Enter Message"></textarea>
</div>
<div class="form-group">
    <label for="datetime">Date and Time</label>
    <input type="datetime-local" class="form-control" id="datetime" @bind="datetime" />
</div>
<div class="form-group">
    <label for="clientId">Client ID</label>
    <input type="number" class="form-control" id="clientId" @bind="clientId" placeholder="Enter Client ID" />
</div>
<div class="form-group">
    <label for="orderId">Order ID</label>
    <input type="number" class="form-control" id="orderId" @bind="orderId" placeholder="Enter Order ID" />
</div>

<button class="btn btn-primary" @onclick="CreateNotification">Create Notification</button>

@if (!string.IsNullOrWhiteSpace(errorMessage))
{
    <div class="alert alert-danger mt-3">
        <strong>Error:</strong> @errorMessage
    </div>
}

@if (notification != null)
{
    <div class="alert alert-success mt-3">
        <strong>Notification:</strong> @notification.Notification_id - @notification.Message - @notification.Datetime - @notification.Client_id - @notification.Order_id
    </div>
}

@if (notifications != null && notifications.Count > 0)
{
    <div class="mt-3">
        <h4>All Notifications</h4>
        <ul class="list-group">
            @foreach (var notif in notifications)
            {
                <li class="list-group-item">@notif.Notification_id - @notif.Message - @notif.Datetime - @notif.Client_id - @notif.Order_id</li>
            }
        </ul>
    </div>
}

@code {
    private int notificationId;
    private string message = string.Empty;
    private DateTime datetime = DateTime.Now;
    private int clientId;
    private int orderId;
    private Notification? notification;
    private List<Notification>? notifications;
    private string? errorMessage;

    private async Task CreateNotification()
    {
        try
        {
            notification = await _orders.CreateNotification(message, datetime, clientId, orderId);
            notifications = null; // Clear the list to avoid confusion
            errorMessage = null; // Clear any previous error message
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }

    private async Task GetNotification()
    {
        try
        {
            notification = await _orders.GetNotification(notificationId);
            notifications = null; // Clear the list to avoid confusion
            errorMessage = null; // Clear any previous error message
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }

    private async Task GetAllNotifications()
    {
        try
        {
            notifications = await _orders.GetAllNotifications();
            notification = null; // Clear the single notification to avoid confusion
            errorMessage = null; // Clear any previous error message
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
}