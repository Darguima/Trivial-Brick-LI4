<Modal>
  <div class="container">

    <form class="form" @onsubmit="HandleSubmit">

      <div class="form-group">
        <label for="image">Image</label>
        <InputFile OnChange="HandleImageChange" />
      </div>

      <div class="form-group">
        <label for="instructions">Instructions ZIP</label>
        <InputFile OnChange="HandleInstructionsChange" />
      </div>

      <div class="form-group">
        <label for="name">Name</label>
        <input type="text" required class="form-control" @bind="name" placeholder="Enter product name">
      </div>

      <div class="form-group">
        <label for="model">Model ID</label>
        <input type="number" required class="form-control" @bind="model" placeholder="Enter product model id">
      </div>

      <div class="form-group">
        <label for="description">Description</label>
        <input type="text" required class="form-control" @bind="description" placeholder="Enter product description">
      </div>

      <div class="form-group">
        <label for="price">Price</label>
        <input type="number" required class="form-control" @bind="price" placeholder="Enter product price">
      </div>

      <div class="modal-actions">
        <button type="button" class="btn-primary" @onclick="ToggleModal">Close</button>
        <button type="submit" class="btn-primary">Submit</button>
      </div>
    </form>

    @if (!string.IsNullOrWhiteSpace(errorMessage))
    {
      <div class="alert alert-danger" role="alert">
        @errorMessage
      </div>
    }
  </div>

</Modal>

@code {
  [Parameter]
  public EventCallback ToggleModal { get; set; }

  private string? name;
  private int? model;
  private string? description;
  private decimal? price;
  private IBrowserFile? image;
  private IBrowserFile? instructions;

  private string? errorMessage;

  private async Task HandleSubmit()
  {
    if (string.IsNullOrWhiteSpace(name) || string.IsNullOrWhiteSpace(description) || model == null || price == null || image == null || instructions == null)
    {
      errorMessage = "Some fields are empty";
      return;
    }

    errorMessage = null;

    Console.WriteLine($"Name: {name}");
    Console.WriteLine($"Model ID: {model}");
    Console.WriteLine($"Price: {price}");
    Console.WriteLine($"Image: {image}");
    Console.WriteLine($"Instructions: {instructions}");

    Product product;
    try
    {
      product = await _catalogs.CreateProduct(model ?? 0, name, price ?? 0, description, "");
    }
    catch (Exception ex)
    {
      errorMessage = ex.Message;
      return;
    }
  }

  private void HandleImageChange(InputFileChangeEventArgs e)
  {
    image = e.File;
  }

  private void HandleInstructionsChange(InputFileChangeEventArgs e)
  {
    instructions = e.File;
  }
}