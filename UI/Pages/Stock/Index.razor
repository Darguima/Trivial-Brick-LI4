@page "/stock"
@rendermode InteractiveServer

<PageTitle>Stock</PageTitle>

@if (!string.IsNullOrWhiteSpace(errorMessage))
{
    <div class="alert alert-danger mt-3">
        <strong>Error:</strong> @errorMessage
    </div>
}

@if (parts != null && parts.Count > 0)
{
    <div class="row mt-3">
        @foreach (var part in parts)
        {
            <div class="col-md-3 mb-3">
                <PartCard Part="part" OnEdit="ShowEditModal" />
            </div>
        }
    </div>
}
else
{
    <p>No parts found.</p>
}

<PartEditModal IsVisible="isEditModalVisible" PartToEdit="PartToEdit" OnClose="CloseEditModal" OnSave="EditPartStock" OnDelete="DeletePart" />

@code {
    private List<Part>? parts;
    private string? errorMessage;

    private bool isEditModalVisible = false;
    private Part? PartToEdit;

    protected override async Task OnInitializedAsync()
    {
        await LoadParts();
    }

    private async Task LoadParts()
    {
        try
        {
            parts = await _catalogs.GetAllParts();
            errorMessage = null;
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }


    private void ShowEditModal(Part part)
    {
        PartToEdit = part;
        isEditModalVisible = true;
    }

    private void CloseEditModal()
    {
        isEditModalVisible = false;
        PartToEdit = null;
    }

    private async Task EditPartStock(Part updatedPart)
    {
        try
        {
            await _catalogs.UpdatePart(updatedPart);
            await LoadParts(); // Refresh the product list
            CloseEditModal();
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }

    private async Task DeletePart(Part part)
    {
        try
        {
            if (parts != null)
            {
                await _catalogs.RemovePart(part); 
                parts.Remove(part); 
            }
            CloseEditModal(); 
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }

}
